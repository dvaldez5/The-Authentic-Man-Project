=================================================================
THE AM PROJECT - PART 6: PWA COMPONENTS
=================================================================

=================================================================
FILE: client/src/components/PWAInstallationGuide.tsx
=================================================================

import { useState } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Download, Smartphone, Monitor, CheckCircle, ArrowRight, X, Loader2, Shield } from "lucide-react";
import { usePWA } from "@/hooks/use-pwa";
import { useToast } from "@/hooks/use-toast";

interface PWAInstallationGuideProps {
  onDismiss?: () => void;
  showDismiss?: boolean;
}

export default function PWAInstallationGuide({ onDismiss, showDismiss = true }: PWAInstallationGuideProps) {
  const [isExpanded, setIsExpanded] = useState(false);
  const [isInstalling, setIsInstalling] = useState(false);
  const { isInstallable, installApp, isInstalled } = usePWA();
  const { toast } = useToast();
  const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);
  const isAndroid = /Android/.test(navigator.userAgent);

  const benefits = [
    "Instant access from your home screen",
    "Works offline for uninterrupted growth",
    "Push notifications for daily challenges",
    "Faster, native app performance",
    "Private, secure experience"
  ];

  const iOSSteps = [
    { icon: "üì±", text: "Open Safari on your iPhone/iPad" },
    { icon: "üîó", text: "Navigate to The AM Project website" },
    { icon: "üì§", text: "Tap the Share button (square with arrow up)" },
    { icon: "üè†", text: "Scroll down and tap 'Add to Home Screen'" },
    { icon: "‚úÖ", text: "Tap 'Add' to complete installation" }
  ];

  const androidSteps = [
    { icon: "üì±", text: "Open Chrome on your Android device" },
    { icon: "üîó", text: "Navigate to The AM Project website" },
    { icon: "‚ãÆ", text: "Tap the three dots menu (‚ãÆ) in Chrome" },
    { icon: "üì≤", text: "Tap 'Install app' or 'Add to Home screen'" },
    { icon: "‚úÖ", text: "Tap 'Install' to add to home screen and app drawer" }
  ];

  const steps = isIOS ? iOSSteps : androidSteps;
  const platform = isIOS ? "iOS" : isAndroid ? "Android" : "Mobile";

  return (
    <Card className="w-full border-primary/20 bg-gradient-to-br from-primary/5 via-background to-secondary/5">
      <CardHeader className="pb-4">
        <div className="flex items-start justify-between">
          <div className="flex items-center space-x-3">
            <div className="p-2 bg-primary/10 rounded-lg">
              <Download className="h-6 w-6 text-primary" />
            </div>
            <div>
              <CardTitle className="text-xl font-bold text-foreground">
                Get The AM Project App
              </CardTitle>
              <CardDescription className="text-sm text-muted-foreground mt-1">
                Transform your personal development journey with our native app experience
                <span className="inline-block ml-2 px-2 py-0.5 text-xs bg-primary/10 text-primary rounded-full border border-primary/20">
                  Beta
                </span>
              </CardDescription>
            </div>
          </div>
          {showDismiss && onDismiss && (
            <Button
              variant="ghost"
              size="sm"
              onClick={onDismiss}
              className="h-8 w-8 p-0 text-muted-foreground hover:text-foreground"
            >
              <X className="h-4 w-4" />
            </Button>
          )}
        </div>
      </CardHeader>

      <CardContent className="space-y-6">
        {/* Value Proposition */}
        <div className="space-y-3">
          <h3 className="font-semibold text-foreground flex items-center gap-2">
            <CheckCircle className="h-4 w-4 text-primary" />
            Why Install The AM Project App?
          </h3>
          <div className="grid gap-2">
            {benefits.map((benefit, index) => (
              <div key={index} className="flex items-center gap-3 text-sm text-muted-foreground">
                <div className="w-1.5 h-1.5 bg-primary rounded-full flex-shrink-0" />
                <span>{benefit}</span>
              </div>
            ))}
          </div>
        </div>

        {/* Primary Install Button */}
        <div className="flex flex-col gap-3">
          {isInstalled ? (
            <div className="flex items-center justify-center p-4 bg-green-500/10 border border-green-500/20 rounded-lg">
              <CheckCircle className="h-5 w-5 text-green-500 mr-2" />
              <span className="text-green-500 font-medium">App Already Installed</span>
            </div>
          ) : (
            <Button 
              size="lg"
              disabled={isInstalling}
              onClick={async () => {
                if (isInstallable) {
                  setIsInstalling(true);
                  try {
                    await installApp();
                    toast({
                      title: "App installed successfully!",
                      description: "The AM Project app has been added to your device.",
                    });
                  } catch (error) {
                    console.error('Install failed:', error);
                    toast({
                      title: "Installation failed",
                      description: "Please try using your browser's install option from the menu.",
                      variant: "destructive"
                    });
                    // Auto-expand steps as fallback
                    setIsExpanded(true);
                  } finally {
                    setIsInstalling(false);
                  }
                } else {
                  // Auto-expand steps when install isn't available
                  setIsExpanded(true);
                  if (isIOS) {
                    toast({
                      title: "iOS Installation Steps",
                      description: "1. Tap the Share button (square with arrow up) 2. Scroll down and tap 'Add to Home Screen' 3. Tap 'Add' to confirm",
                      duration: 8000,
                    });
                  } else {
                    toast({
                      title: "Android Installation Steps", 
                      description: "1. Tap the three dots menu in Chrome 2. Tap 'Add to Home screen' or 'Install app' 3. Tap 'Add' to confirm",
                      duration: 8000,
                    });
                  }
                }
              }}
              className="w-full bg-primary hover:bg-primary/90 text-primary-foreground font-semibold shadow-lg disabled:opacity-70"
            >
              {isInstalling ? (
                <>
                  <Loader2 className="mr-2 h-5 w-5 animate-spin" />
                  Installing...
                </>
              ) : (
                <>
                  <Download className="mr-2 h-5 w-5" />
                  Install App
                </>
              )}
            </Button>
          )}
          
          {/* Show Steps Toggle */}
          {!isInstalled && (
            <div className="flex flex-col items-center gap-2">
              <Button 
                variant="outline" 
                size="sm"
                onClick={() => setIsExpanded(!isExpanded)}
                className="bg-background/50 text-muted-foreground hover:text-foreground"
              >
                {isExpanded ? "Hide" : "Show"} Step-by-Step Guide
                <ArrowRight className={`ml-2 h-4 w-4 transition-transform ${isExpanded ? "rotate-90" : ""}`} />
              </Button>
              
              {/* Installation Status Indicator */}
              <div className="flex items-center gap-2 text-xs text-muted-foreground">
                {isInstallable ? (
                  <>
                    <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse" />
                    <span>Ready to install</span>
                  </>
                ) : (
                  <>
                    <div className="w-2 h-2 bg-amber-500 rounded-full" />
                    <span>Manual installation required</span>
                  </>
                )}
              </div>
            </div>
          )}
        </div>

        {/* Installation Steps */}
        {isExpanded && (
          <div className="space-y-4 animate-in slide-in-from-top-2 duration-300">
            <div className="border-l-2 border-primary/30 pl-4">
              <h3 className="font-semibold text-foreground mb-3">
                {platform} Installation Steps
              </h3>
              <div className="space-y-3">
                {steps.map((step, index) => (
                  <div key={index} className="flex items-start gap-3 group">
                    <div className="flex-shrink-0 w-8 h-8 bg-primary/10 rounded-full flex items-center justify-center text-lg border border-primary/20 group-hover:bg-primary/20 transition-colors">
                      {step.icon}
                    </div>
                    <div className="flex-1 pt-1">
                      <p className="text-sm text-foreground font-medium">
                        Step {index + 1}
                      </p>
                      <p className="text-sm text-muted-foreground">
                        {step.text}
                      </p>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* Success Message */}
            <div className="p-4 bg-primary/5 rounded-lg border border-primary/20">
              <div className="flex items-center gap-2 mb-2">
                <CheckCircle className="h-4 w-4 text-primary" />
                <span className="font-medium text-foreground">You're All Set!</span>
              </div>
              <p className="text-sm text-muted-foreground">
                Once installed, The AM Project will appear on your home screen like any other app. 
                Tap to open and experience the full power of personal development at your fingertips.
              </p>
            </div>
          </div>
        )}

        {/* Brand Footer */}
        <div className="pt-4 border-t border-border/50">
          <div className="flex items-center justify-center gap-2 text-xs text-muted-foreground">
            <div className="w-4 h-4 bg-primary/20 rounded-full flex items-center justify-center">
              <div className="w-2 h-2 bg-primary rounded-full" />
            </div>
            <span>Building the next generation of strong, purposeful men</span>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}

=================================================================
FILE: client/src/components/pwa/InstallPrompt.tsx
=================================================================

import { useState, useEffect } from "react";
import { usePWA } from "@/hooks/use-pwa";
import PWAInstallationGuide from "@/components/PWAInstallationGuide";

export default function InstallPrompt() {
  const [dismissed, setDismissed] = useState(false);
  const { isInstalled, isInstallable } = usePWA();
  const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);

  useEffect(() => {
    // Check if already dismissed
    const isDismissed = localStorage.getItem('pwa-install-dismissed') === 'true';
    if (isDismissed) {
      setDismissed(true);
    }
  }, []);

  const handleDismiss = () => {
    setDismissed(true);
    localStorage.setItem('pwa-install-dismissed', 'true');
  };

  // Don't show if already installed, dismissed, or not installable
  if (isInstalled || dismissed || (!isInstallable && !isIOS)) {
    return null;
  }

  return (
    <PWAInstallationGuide 
      onDismiss={handleDismiss}
      showDismiss={true}
    />
  );
}

=================================================================
FILE: client/src/components/Footer.tsx
=================================================================

import { Link } from 'wouter';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Form, FormControl, FormField, FormItem } from '@/components/ui/form';
import { useState } from 'react';
import { useForm } from 'react-hook-form';
import { z } from 'zod';
import { zodResolver } from '@hookform/resolvers/zod';
import { apiRequest } from '@/lib/queryClient';
import { useToast } from '@/hooks/use-toast';
import { usePWA } from '@/hooks/use-pwa';
import { Instagram, Twitter, Youtube, Linkedin, Download, Loader2, CheckCircle } from 'lucide-react';
import { scrollToTop } from '@/lib/utils';

const footerFormSchema = z.object({
  email: z.string().email({ message: 'Please enter a valid email address' }),
});

type FooterFormValues = z.infer<typeof footerFormSchema>;

const Footer = () => {
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [isInstalling, setIsInstalling] = useState(false);
  const { toast } = useToast();
  const { isInstallable, installApp, isInstalled } = usePWA();
  
  const form = useForm<FooterFormValues>({
    resolver: zodResolver(footerFormSchema),
    defaultValues: {
      email: '',
    },
  });

  async function onSubmit(data: FooterFormValues) {
    setIsSubmitting(true);
    try {
      await apiRequest('POST', '/api/newsletter', data);
      toast({
        title: "Success!",
        description: "You've been added to our newsletter.",
        variant: "default",
      });
      form.reset();
    } catch (error) {
      toast({
        title: "Error",
        description: "Failed to subscribe. Please try again.",
        variant: "destructive",
      });
    } finally {
      setIsSubmitting(false);
    }
  }

  return (
    <footer className="bg-background border-t border-border pt-16 pb-8 relative overflow-hidden">
      {/* Decorative elements */}
      <div className="absolute -right-40 -bottom-40 w-96 h-96 bg-accent/5 rounded-full blur-3xl z-0"></div>
      <div className="absolute -left-40 top-0 w-80 h-80 bg-accent/5 rounded-full blur-2xl z-0"></div>
      
      <div className="container relative z-10">
        <div className="grid grid-cols-1 md:grid-cols-4 gap-10 mb-16">
          <div className="md:col-span-1">
            <Link href="/" onClick={() => scrollToTop()} className="flex items-center mb-6">
              <img src="/white-logo.png" alt="The AM Project Logo" className="h-20 w-auto" />
            </Link>
            <p className="text-muted-foreground mb-6">
              Redefining what it means to be a man through strength, integrity, discipline, and purpose.
            </p>
            <div className="flex gap-4 mt-6">
              <a href="https://www.instagram.com/theauthenticmanproject/" target="_blank" rel="noopener noreferrer" 
                className="bg-accent/10 hover:bg-accent/20 text-accent p-2 rounded-full transition duration-300 flex items-center justify-center">
                <Instagram size={18} />
              </a>
              <a href="https://twitter.com/theamproject" target="_blank" rel="noopener noreferrer" 
                className="bg-accent/10 hover:bg-accent/20 text-accent p-2 rounded-full transition duration-300 flex items-center justify-center">
                <Twitter size={18} />
              </a>
              <a href="https://youtube.com/@theauthenticmanproject?si=mUe1tkR-EvkdHinA" target="_blank" rel="noopener noreferrer" 
                className="bg-accent/10 hover:bg-accent/20 text-accent p-2 rounded-full transition duration-300 flex items-center justify-center">
                <Youtube size={18} />
              </a>
              <a href="https://linkedin.com/company/the-am-project" target="_blank" rel="noopener noreferrer" 
                className="bg-accent/10 hover:bg-accent/20 text-accent p-2 rounded-full transition duration-300 flex items-center justify-center">
                <Linkedin size={18} />
              </a>
            </div>
          </div>
          
          <div>
            <h4 className="text-lg font-bold mb-6 flex items-center">
              <span className="h-5 w-1 bg-accent mr-2 rounded-full"></span>
              Quick Links
            </h4>
            <ul className="space-y-3">
              <li><Link href="/" onClick={() => scrollToTop()} className="text-muted-foreground hover:text-accent transition duration-300 flex items-center gap-1">
                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-accent/70"><path d="m9 18 6-6-6-6"/></svg>
                Home
              </Link></li>
              <li><Link href="/about" onClick={() => scrollToTop()} className="text-muted-foreground hover:text-accent transition duration-300 flex items-center gap-1">
                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-accent/70"><path d="m9 18 6-6-6-6"/></svg>
                About
              </Link></li>
              <li><Link href="/standard" onClick={() => scrollToTop()} className="text-muted-foreground hover:text-accent transition duration-300 flex items-center gap-1">
                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-accent/70"><path d="m9 18 6-6-6-6"/></svg>
                The AM Standard
              </Link></li>
              <li><Link href="/blog" onClick={() => scrollToTop()} className="text-muted-foreground hover:text-accent transition duration-300 flex items-center gap-1">
                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-accent/70"><path d="m9 18 6-6-6-6"/></svg>
                Blog
              </Link></li>
              <li><Link href="/join" onClick={() => scrollToTop()} className="text-muted-foreground hover:text-accent transition duration-300 flex items-center gap-1">
                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-accent/70"><path d="m9 18 6-6-6-6"/></svg>
                Join the Newsletter
              </Link></li>
              <li><Link href="/contact" onClick={() => scrollToTop()} className="text-muted-foreground hover:text-accent transition duration-300 flex items-center gap-1">
                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-accent/70"><path d="m9 18 6-6-6-6"/></svg>
                Contact
              </Link></li>
            </ul>
          </div>
          
          <div>
            <h4 className="text-lg font-bold mb-6 flex items-center">
              <span className="h-5 w-1 bg-accent mr-2 rounded-full"></span>
              Resources
            </h4>
            <ul className="space-y-3">
              <li><Link href="/blog" onClick={() => scrollToTop()} className="text-muted-foreground hover:text-accent transition duration-300 flex items-center gap-1">
                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-accent/70"><path d="m9 18 6-6-6-6"/></svg>
                Discipline Framework
              </Link></li>
              <li><Link href="/blog" onClick={() => scrollToTop()} className="text-muted-foreground hover:text-accent transition duration-300 flex items-center gap-1">
                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-accent/70"><path d="m9 18 6-6-6-6"/></svg>
                Physical Confidence Guide
              </Link></li>
              <li><Link href="/blog" onClick={() => scrollToTop()} className="text-muted-foreground hover:text-accent transition duration-300 flex items-center gap-1">
                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-accent/70"><path d="m9 18 6-6-6-6"/></svg>
                Leadership Principles
              </Link></li>
              <li><Link href="/blog" onClick={() => scrollToTop()} className="text-muted-foreground hover:text-accent transition duration-300 flex items-center gap-1">
                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-accent/70"><path d="m9 18 6-6-6-6"/></svg>
                Essential Reading List
              </Link></li>
              <li><Link href="/blog" onClick={() => scrollToTop()} className="text-muted-foreground hover:text-accent transition duration-300 flex items-center gap-1">
                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-accent/70"><path d="m9 18 6-6-6-6"/></svg>
                The AM Podcast
              </Link></li>
            </ul>
          </div>
          
          <div>
            <h4 className="text-lg font-bold mb-6 flex items-center">
              <span className="h-5 w-1 bg-accent mr-2 rounded-full"></span>
              Get the App
            </h4>
            <p className="text-muted-foreground mb-4">Download the AM Project app for offline access and native experience.</p>
            <div className="mb-6">
              {isInstalled ? (
                <div className="flex items-center justify-center p-3 bg-green-500/10 border border-green-500/20 rounded-lg mb-3">
                  <CheckCircle className="h-4 w-4 text-green-500 mr-2" />
                  <span className="text-green-500 font-medium text-sm">App Installed</span>
                </div>
              ) : (
                <Button 
                  disabled={isInstalling}
                  onClick={async () => {
                    if (isInstallable) {
                      setIsInstalling(true);
                      try {
                        await installApp();
                        toast({
                          title: "App installed successfully!",
                          description: "The AM Project app has been added to your device.",
                        });
                      } catch (error) {
                        console.error('Install failed:', error);
                        toast({
                          title: "Installation failed",
                          description: "Please use your browser's install option from the menu.",
                          variant: "destructive"
                        });
                      } finally {
                        setIsInstalling(false);
                      }
                    } else {
                      // iOS Safari or other browsers without install prompt
                      const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);
                      if (isIOS) {
                        toast({
                          title: "iOS Installation Steps",
                          description: "1. Tap the Share button (square with arrow up) 2. Scroll down and tap 'Add to Home Screen' 3. Tap 'Add' to confirm",
                          duration: 8000,
                        });
                      } else {
                        toast({
                          title: "Android Installation Steps",
                          description: "1. Tap the three dots menu in Chrome 2. Tap 'Add to Home screen' or 'Install app' 3. Tap 'Add' to confirm",
                          duration: 8000,
                        });
                      }
                    }
                  }}
                  className="bg-accent text-primary-foreground rounded px-5 py-3 font-semibold hover:bg-accent/80 transition duration-300 w-full mb-3 disabled:opacity-70"
                >
                  {isInstalling ? (
                    <>
                      <Loader2 className="h-4 w-4 mr-2 animate-spin" />
                      Installing...
                    </>
                  ) : (
                    <>
                      <Download className="h-4 w-4 mr-2" />
                      Install App
                    </>
                  )}
                </Button>
              )}
            </div>
            
            <h4 className="text-lg font-bold mb-4 flex items-center">
              <span className="h-5 w-1 bg-accent mr-2 rounded-full"></span>
              Join Our Newsletter
            </h4>
            <p className="text-muted-foreground mb-4">Get actionable tools and insights for becoming the strongest version of yourself.</p>
            <Form {...form}>
              <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-3">
                <FormField
                  control={form.control}
                  name="email"
                  render={({ field }) => (
                    <FormItem>
                      <FormControl>
                        <Input
                          placeholder="Enter your email"
                          {...field}
                          className="bg-muted/50 border-border focus:border-accent rounded text-foreground placeholder-muted-foreground"
                        />
                      </FormControl>
                    </FormItem>
                  )}
                />
                <Button 
                  type="submit" 
                  disabled={isSubmitting}
                  className="w-full bg-primary text-primary-foreground rounded px-5 py-3 font-semibold hover:bg-primary/80 transition duration-300"
                >
                  {isSubmitting ? 'Subscribing...' : 'Subscribe'}
                </Button>
              </form>
            </Form>
          </div>
        </div>

        {/* Bottom Section */}
        <div className="border-t border-border pt-8">
          <div className="flex flex-col md:flex-row justify-between items-center">
            <div className="text-muted-foreground text-sm mb-4 md:mb-0">
              ¬© 2024 The AM Project. All rights reserved.
            </div>
            <div className="flex space-x-6">
              <Link href="/terms" onClick={() => scrollToTop()} className="text-muted-foreground hover:text-accent transition duration-300 text-sm">
                Terms of Service
              </Link>
              <Link href="/privacy" onClick={() => scrollToTop()} className="text-muted-foreground hover:text-accent transition duration-300 text-sm">
                Privacy Policy
              </Link>
            </div>
          </div>
        </div>
      </div>
    </footer>
  );
};

export default Footer;